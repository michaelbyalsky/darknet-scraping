{"version":3,"sources":["api/index.js","components/Tags.js","components/Pastes.js","components/Lables.js","components/Search.js","components/Notifications.js","App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","apis","getPastes","entryPoint","payload","get","update","patch","post","Tags","tags","className","map","tag","i","Chip","classes","root","label","Object","keys","values","color","useStyles","makeStyles","theme","width","backgroundColor","palette","background","paper","position","overflow","Pastes","panel","paste","useState","expanded","setExpanded","Accordion","_id","onChange","event","isExpanded","AccordionSummary","expandIcon","aria-controls","id","Grid","container","alignItems","item","Typography","gutterBottom","variant","Title","AccordionDetails","List","Content","xs","Author","Date","undefined","Lables","length","ChooseLabels","lables","setLables","setPastes","pastes","options","setOptions","useEffect","a","value","allPastes","data","filtered","allFiltered","sort","b","date","console","error","customStyles","option","provided","borderBottom","height","control","maxMenuHeight","placeholder","name","choosens","closeMenuOnSelect","styles","marginTop","spacing","grow","flexGrow","appBar","title","display","breakpoints","up","search","borderRadius","shape","fade","common","white","marginRight","marginLeft","searchIcon","padding","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","toolbar","minHeight","paddingTop","paddingBottom","buttons2","buttons1","marginRigth","alignSelf","button","margin","Search","setAllNotitfications","searchText","handleChange","allNotitfications","keyword1","React","open","setOpen","anchorRef","useRef","modalOpen","setModalOpen","newKeyWord","setNewKeyword","getKeyWord","obj","push","handleModalClose","handleClose","current","contains","target","handleListKeyDown","key","preventDefault","handleAddKeyword","prevOpen","focus","handleUpdate","type","filter","not","AppBar","size","Toolbar","noWrap","InputBase","input","e","sytle","Button","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","DialogActions","IconButton","ref","aria-haspopup","Badge","badgeContent","Popper","anchorEl","role","style","overflowY","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","autoFocusItem","onKeyDown","ListItem","severity","text","Link","Alert","props","elevation","Notifications","faildLogs","openLogs","setOpenLogs","openKeyWord1","setOpenKeyWord1","logs","moment","toDate","valueOf","subtract","handleCloseLogs","reason","handleCloseKeyword1","Snackbar","autoHideDuration","App","setSearchText","setFailedLogs","setKeyword1","fetchPastes","sorted","fetchLogs","status","maped","log","format","searchKeyword1","keyword","array","joinedArr","forEach","arr","debounceSave","useCallback","debounce","nextValue","searchPaste","getAllNotifications","fetchAll","promises","Promise","all","then","interval","setInterval","clearInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.206cd72c.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst api = axios.create({\n    baseURL: '/api/v1',\n})\n\nexport const getPastes = (entryPoint, payload) => {\n    return api.get(entryPoint)\n}\n\nexport const update = (entryPoint, payload) => {\n    return api.patch(entryPoint, payload)\n}\n\nexport const create = (entryPoint, payload) => {\n    return api.post(entryPoint, payload)\n}\n\n\n\n\nconst apis = {\n    getPastes,\n    update,\n    create\n}\n\n\nexport default apis","import React from \"react\";\nimport \"./Tags.css\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst Tags = ({ tags }) => {\n  return (\n    <div className=\"labelsContainer\">\n      <div className=\"labels\">\n        {tags.map((tag, i) => {\n          return (\n            <div className=\"label\" key={i}>\n              <Chip\n                classes={{ root: \"label\" }}\n                label={`${Object.keys(tag)} : ${Object.values(tag)}`}\n                color=\"primary\"\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Tags;\n","import React, { useEffect, useState } from \"react\";\nimport api from \"../api/index\";\nimport List from \"@material-ui/core/List\";\nimport \"./Pastes.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport Tags from './Tags'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    overflow: \"auto\",\n  },\n}));\n\nexport default function Pastes({ paste }) {\n  const [expanded, setExpanded] = useState(false); //set the state of the accordion\n  const classes = useStyles();\n  const [pastes, setPastes] = useState([]);\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div>\n      <div className=\"ticket\">\n        <div className=\"section_1\">\n          <Accordion\n            expanded={expanded === paste._id}\n            onChange={handleChange(paste._id)}\n          >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1bh-content\"\n              id=\"panel1bh-header\"\n            >\n              <Grid container alignItems=\"center\">\n                <Grid item>\n                  <Typography gutterBottom variant=\"h6\">\n                    {paste.Title}\n                  </Typography>\n                </Grid>\n                {/* <Grid item xs>\n                      {ticket.updated === true && <CheckCircleOutlineIcon />}\n                    </Grid> */}\n              </Grid>\n            </AccordionSummary>\n            <AccordionDetails>\n              <List className={classes.root}>\n                <Typography color=\"textSecondary\" variant=\"body2\">\n                  {paste.Content}\n                </Typography>\n              </List>\n            </AccordionDetails>\n          </Accordion>\n        </div>\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            \n            <Typography gutterBottom>\n              \n              {`by ${paste.Author} | ${paste.Date}`}\n            </Typography>\n          </Grid>\n          <Grid item>\n            {/* <Typography gutterBottom variant=\"h6\">\n                  <IconButton\n                    classes={{ root: \"hideTicketButton\" }}\n                    onClick={() => hideTicket(ticket)}\n                    title=\"hide\"\n                  >\n                    <VisibilityOffIcon />\n                  </IconButton>\n                </Typography> */}\n          </Grid>\n        </Grid>\n        <div className=\"status\">\n              <Grid container alignItems=\"center\">\n               { paste.Lables !== undefined && \n                <Grid item>\n                  {paste.Lables.length !== 0 && (\n                    <Tags className=\"labels\" tags={paste.Lables} />\n                  )}\n                </Grid>\n               }\n              </Grid>\n            </div> \n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport api from \"../api/index\";\n// import network from '../../services/network';\n\n// const options = [\n//   { value: \"Guns\", label: \"Guns\" },\n//   { value: \"Money\", label: \"Money\" },\n//   { value: \"All\", label: \"All\" },\n// ];\n\nconst ChooseLabels = ({lables, setLables, pastes, setPastes, options, setOptions }) => {\n\n\n  useEffect(() => {\n    (async () => {\n      try {\n        if (lables.length === 0 || !lables) {\n          return;\n        }\n        if (lables.value === \"All\") {\n          const { data: allPastes } = await api.getPastes(`/pastes`);\n          return setPastes(allPastes);\n        }\n        const { data: filtered } = await api.getPastes(\n          `/pastes/search?search=${lables.value}`\n        );\n        const allFiltered = filtered.sort((a, b) => {\n            return new Date(b.date) - new Date(a.date);\n          });\n        setPastes(allFiltered);\n      } catch (err) {\n        console.error(err);\n      }\n    })();\n  }, [lables]);\n  const customStyles = {\n    option: (provided) => ({\n      ...provided,\n      color: \"white\",\n      backgroundColor: \"blue\",\n      borderBottom: \"1px dotted black\",\n      height: \"100%\",\n      width: \"100%\",\n    }),\n    control: (provided) => ({\n      ...provided,\n      backgroundColor: \"neutral30\",\n    }),\n  };\n  return (\n    <div className=\"labelFilter\">\n      <Select\n        value={lables}\n        className=\"selectLabels\"\n        maxMenuHeight={300}\n        placeholder=\"select labels\"\n        name=\"labels\"\n        onChange={(choosens) => setLables(choosens)}\n        closeMenuOnSelect={false}\n        options={options}\n        styles={customStyles}\n      />\n    </div>\n  );\n};\n\nexport default ChooseLabels;\n","import React, {useEffect, useState } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ChooseLabels from \"./Lables\";\nimport NotificationImportantIcon from \"@material-ui/icons/NotificationImportant\";\nimport Button from \"@material-ui/core/Button\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Link from \"@material-ui/core/Link\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport api from \"../api/index\";\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"10px\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  appBar: {\n    position: \"fixed\",\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  toolbar: {\n    minHeight: 0,\n    alignItems: \"flex-start\",\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n  },\n  buttons2: {\n    width: \"400px\",\n  },\n  buttons1: {\n    marginRigth: -1,\n    width: \"200px\",\n    alignSelf: \"flex-end\",\n  },\n  button: {\n    margin: \"2px\",\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Search = ({\n  setAllNotitfications,\n  searchText,\n  handleChange,\n  pastes,\n  setPastes,\n  allNotitfications,\n  keyword1,\n  options,\n  setOptions,\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [newKeyWord, setNewKeyword] = React.useState('');\n  const [lables, setLables] = useState([]);\n\n  const getKeyWord = async () => {\n    try {\n      const { data } = await api.getPastes(\"/pastes/keyword\");\n      const obj = data.map((label) => {\n        return { value: label.name, label: label.name };\n      });\n      obj.push({ value: \"All\", label: \"All\" })\n      setOptions(obj);\n    } catch (err) {\n        console.error(err)\n    }\n  };\n\n  useEffect(() => {\n    getKeyWord()\n  }, [])\n\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClickOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const handleAddKeyword = async () => {\n    try{\n      setModalOpen(false);\n      await api.create('/pastes/keyword', { name: newKeyWord})\n      setNewKeyword('');\n      getKeyWord()\n    }catch(err){\n      console.error(err);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  const handleUpdate = async (id, type) => {\n    try {\n      if (type === \"keyword\") {\n        await api.update(\"/pastes\", { _id: id });\n        const filtered = allNotitfications.filter((not) => {\n          return not._id !== id;\n        });\n        setAllNotitfications(filtered);\n      } else {\n        await api.update(\"/logs\", { _id: id });\n      }\n      const filtered = allNotitfications.filter((not) => {\n        return not._id !== id;\n      });\n      setAllNotitfications(filtered);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className={classes.grow}>\n      <AppBar size=\"small\" className={classes.appBar} id=\"wrapper\">\n        <Toolbar className={classes.toolbar}>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            DarkNet\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              size=\"small\"\n              id=\"searchInput\"\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              value={searchText}\n              onChange={(e) => handleChange(e)}\n            />\n          </div>\n          <div sytle={{ width: \"100px\" }}></div>\n          <div />\n          <div id=\"buttons\" className={classes.buttons2}>\n            <ChooseLabels\n            lables={lables}\n            setLables={setLables}\n              options={options}\n              setOptions={setOptions}\n              pastes={pastes}\n              setPastes={setPastes}\n            />\n          </div>\n            <div>\n            <Button onClick={handleClickOpen}>add keyword</Button>\n            <Dialog open={modalOpen} onClose={handleModalClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add keyword</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n           add a new keyword\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"new keyword\"\n            type=\"text\"\n            fullWidth\n            onChange={(e) => setNewKeyword(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleModalClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddKeyword} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n          <div id=\"buttons\" className={classes.buttons1} />\n            </div>\n          <div id=\"buttons\" className={classes.buttons1}>\n            <IconButton\n              ref={anchorRef}\n              aria-controls={open ? \"menu-list-grow\" : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleToggle}\n              id=\"sortByUnDone\"\n              title=\"sort by undone\"\n              // onClick={sortByUnDone}\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              <Badge badgeContent={allNotitfications.length} color=\"secondary\">\n                <NotificationImportantIcon color=\"action\" />\n              </Badge>\n            </IconButton>\n            <Popper\n              open={open}\n              anchorEl={anchorRef.current}\n              role={undefined}\n              style={{ overflowY: \"auto\", height: \"300px\" }}\n              transition\n              disablePortal\n            >\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{\n                    transformOrigin:\n                      placement === \"bottom\" ? \"center top\" : \"center bottom\",\n                  }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <List autoFocusItem={open} onKeyDown={handleListKeyDown}>\n                        {allNotitfications.length !== 0 &&\n                          allNotitfications.map((not) => {\n                            return (\n                              <ListItem\n                                style={{ marginTop: \"2rem\", display: \"grid\" }}\n                                severity=\"info\"\n                              >\n                                <Typography>{not.text}</Typography>\n                                <Link\n                                  onClick={() =>\n                                    handleUpdate(not._id, not.type)\n                                  }\n                                >\n                                  mark as read\n                                </Link>\n                              </ListItem>\n                            );\n                          })}\n                      </List>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport api from \"../api/index\";\nimport moment from \"moment\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function Notifications({ faildLogs, keyword1 }) {\n  const classes = useStyles();\n  const [openLogs, setOpenLogs] = React.useState(false);\n  const [openKeyWord1, setOpenKeyWord1] = React.useState(false);\n\n  const handleClick = () => {\n    setOpenLogs(true);\n  };\n\n  useEffect(() => {\n    const filtered = faildLogs.filter((logs) => {\n      return (\n        moment(logs.date).toDate().valueOf() >\n        moment().subtract(2, \"minutes\").valueOf()\n      );\n    });\n    if (filtered.length > 0) {\n      setOpenLogs(true);\n    }\n  }, [faildLogs]);\n\n  useEffect(() => {\n    const filtered = keyword1.filter((pastes) => {\n      return (\n        moment(pastes.date).toDate().valueOf() >\n        moment().subtract(8, \"hours\").valueOf()\n      );\n    });\n    if (filtered.length > 0) {\n      setOpenKeyWord1(true);\n    }\n  }, [keyword1]);\n\n\n\n  const handleCloseLogs = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenLogs(false);\n  };\n\n  const handleCloseKeyword1 = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenKeyWord1(false);\n  };\n\n\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        open={openLogs}\n        autoHideDuration={6000}\n        onClose={handleCloseLogs}\n      >\n        <Alert onClose={handleCloseLogs} severity=\"error\">\n          scrawler crashed\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={openKeyWord1}\n        autoHideDuration={6000}\n        onClose={handleCloseKeyword1}\n      >\n        <Alert onClose={handleCloseKeyword1} severity=\"info\">\n          new paste with keyword Money Detached!\n        </Alert>\n      </Snackbar>\n    \n    </div>\n  );\n}\n","import { useState, useEffect, useCallback } from \"react\";\nimport Pastes from \"./components/Pastes\";\nimport api from \"./api/index\";\nimport Search from \"./components/Search\";\nimport Logs from \"./components/Logs\";\nimport \"react-notifications/lib/notifications.css\";\nimport Notifications from \"./components/Notifications\";\nimport moment from \"moment\";\nimport debounce from \"lodash.debounce\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [pastes, setPastes] = useState([]);\n  const [searchText, setSearchText] = useState([]); // search input text\n  const [faildLogs, setFailedLogs] = useState([]);\n  const [keyword1, setKeyword1] = useState([]);\n\n  const [allNotitfications, setAllNotitfications] = useState([]);\n  const [options, setOptions] = useState([]);\n\n  const fetchPastes = async () => {\n    try {\n      const { data } = await api.getPastes(\"/pastes\");\n      const sorted = data.sort((a, b) => {\n        // Turn your strings into dates, and then subtract them\n        // to get a value that is either negative, positive, or zero.\n        return new Date(b.Date) - new Date(a.Date);\n      });\n      setPastes(sorted);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const fetchLogs = async (status) => {\n    try {\n      const { data } = await api.getPastes(`/logs/${status}`);\n      const maped = data.map((log) => {\n        return {\n          text: `scroller ${log.status} || ${moment(log.date).format(\n            \"ddd DD-MMM-YYYY, hh:mm A\"\n          )}`,\n          _id: log._id,\n          date: log.date,\n          type: \"log\",\n        };\n      });\n      setFailedLogs(maped)\n      return maped;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const searchKeyword1 = async (keyword) => {\n    try {\n      const { data } = await axios.post(`/api/v1/pastes/lable1`, keyword);\n      const maped = data.map((array) => {\n        return array[0].map((paste) => {\n          return {\n            text: `word with keyword ${array[1].keyword} || ${moment(paste.Date).format(\n              \"DD-MM-YY, hh:mm A\"\n            )}`,\n            _id: paste._id,\n            date: paste.Date,\n            type: \"keyword\",\n          };\n        });\n      })\n      const joinedArr = []\n      maped.forEach(arr => {\n        joinedArr.push(...arr)\n      });\n      setKeyword1(joinedArr)\n      return joinedArr;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const debounceSave = useCallback(\n    debounce((nextValue) => searchPaste(nextValue), 1000),\n    []\n  );\n\n  const handleChange = (e) => {\n    const nextValue = e.target.value;\n    setSearchText(nextValue);\n    debounceSave(nextValue);\n  };\n\n  const searchPaste = async (value) => {\n    try {\n      \n        const { data } = await api.getPastes(`/pastes/search?search=${value}`);\n        const allFiltered = data.sort((a, b) => {\n          return new Date(b.date) - new Date(a.date);\n        });\n        setPastes(allFiltered);\n      \n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const getAllNotifications = async (arr) => {\n    const joinedArr = []\n    arr.forEach(array => {\n      joinedArr.push(...array) \n    });\n    const allFiltered = joinedArr.sort((a, b) => {\n      return new Date(b.date) - new Date(a.date);\n    });\n    setAllNotitfications(allFiltered);\n  };\n\n  const fetchAll = async () => {\n    const promises = [fetchLogs(\"faild\"), searchKeyword1(options)]\n   Promise.all(promises).then((data) => {\n    getAllNotifications(data)\n   })\n  };\n  useEffect(() => {\n    try {\n      if (options.length !== 0){\n        fetchAll();\n      }\n      const interval = setInterval(async () => {\n        fetchAll();\n      }, 30000);\n      return () => {\n        clearInterval(interval);\n      };\n    } catch (e) {\n      console.error(e);\n    }\n  }, [options]);\n\n  useEffect(() => {\n    fetchPastes();\n  }, []);\n  return (\n    <div className=\"App\">\n      <Search\n        setAllNotitfications={setAllNotitfications}\n        allNotitfications={allNotitfications}\n        setPastes={setPastes}\n        pastes={pastes}\n        faildLogs={faildLogs}\n        handleChange={handleChange}\n        searchText={searchText}\n        fetchAll={fetchAll}\n        options={options}\n        setOptions={setOptions}\n      />\n      {faildLogs.length > 0 && (\n        <div style={{ marginTop: \"5rem\" }}>\n          <Notifications keyword1={keyword1} faildLogs={faildLogs} />\n        </div>\n      )}\n      <div\n        className=\"mainArea\"\n        style={{\n          marginTop: \"3rem\",\n       \n        }}\n      >\n        <div\n          className=\"allPastes\"\n          style={{\n            overflowY: \"auto\",\n            // width: \"600px\",\n          }}\n        >\n          {pastes.length !== 0 &&\n            pastes.map((paste, i) => {\n              return <Pastes key={i} paste={paste} />;\n            })}\n        </div>\n        {/* <div\n          style={{\n            overflowY: \"auto\",\n            // width: \"600px\",\n          }}\n        >\n          <Logs />\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}