[{"/app/client/src/index.js":"1","/app/client/src/components/Search.js":"2","/app/client/src/App.js":"3","/app/client/src/components/Lables.js":"4","/app/client/src/reportWebVitals.js":"5","/app/client/src/components/Notifications.js":"6","/app/client/src/api/index.js":"7","/app/client/src/components/Logs.js":"8","/app/client/src/components/Pastes.js":"9","/app/client/src/components/Tags.js":"10"},{"size":500,"mtime":1606910761884,"results":"11","hashOfConfig":"12"},{"size":10498,"mtime":1607003515931,"results":"13","hashOfConfig":"12"},{"size":4873,"mtime":1607003482026,"results":"14","hashOfConfig":"12"},{"size":1761,"mtime":1606994980045,"results":"15","hashOfConfig":"12"},{"size":362,"mtime":1606673647310,"results":"16","hashOfConfig":"12"},{"size":2248,"mtime":1607003290983,"results":"17","hashOfConfig":"12"},{"size":434,"mtime":1606959869483,"results":"18","hashOfConfig":"12"},{"size":1514,"mtime":1606961388237,"results":"19","hashOfConfig":"12"},{"size":3492,"mtime":1606983927811,"results":"20","hashOfConfig":"12"},{"size":577,"mtime":1606910749768,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"jg9a1a",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/client/src/index.js",[],["46","47"],"/app/client/src/components/Search.js",["48","49"],"/app/client/src/App.js",["50","51","52"],"/app/client/src/components/Lables.js",["53","54"],"import React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport api from \"../api/index\";\n// import network from '../../services/network';\n\n// const options = [\n//   { value: \"Guns\", label: \"Guns\" },\n//   { value: \"Money\", label: \"Money\" },\n//   { value: \"All\", label: \"All\" },\n// ];\n\nconst ChooseLabels = ({lables, setLables, pastes, setPastes, options, setOptions }) => {\n\n\n  useEffect(() => {\n    (async () => {\n      try {\n        if (lables.length === 0 || !lables) {\n          return;\n        }\n        if (lables.value === \"All\") {\n          const { data: allPastes } = await api.getPastes(`/pastes`);\n          return setPastes(allPastes);\n        }\n        const { data: filtered } = await api.getPastes(\n          `/pastes/search?search=${lables.value}`\n        );\n        const allFiltered = filtered.sort((a, b) => {\n            return new Date(b.Date) - new Date(a.Date);\n          });\n        setPastes(allFiltered);\n      } catch (err) {\n        console.error(err);\n      }\n    })();\n  }, [lables]);\n  const customStyles = {\n    option: (provided) => ({\n      ...provided,\n      color: \"white\",\n      backgroundColor: \"blue\",\n      borderBottom: \"1px dotted black\",\n      height: \"100%\",\n      width: \"100%\",\n    }),\n    control: (provided) => ({\n      ...provided,\n      backgroundColor: \"neutral30\",\n    }),\n  };\n  return (\n    <div className=\"labelFilter\">\n      <Select\n        value={lables}\n        className=\"selectLabels\"\n        maxMenuHeight={300}\n        placeholder=\"select labels\"\n        name=\"labels\"\n        onChange={(choosens) => setLables(choosens)}\n        closeMenuOnSelect={false}\n        options={options}\n        styles={customStyles}\n      />\n    </div>\n  );\n};\n\nexport default ChooseLabels;\n","/app/client/src/reportWebVitals.js",[],"/app/client/src/components/Notifications.js",["55","56","57","58"],"/app/client/src/api/index.js",[],"/app/client/src/components/Logs.js",["59","60","61"],"import React, { useState, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport api from \"../api/index\"; \nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\n\nconst columns = [\n  { field: \"id\", headerName: \"Mongo Id\", width: 130 },\n  { field: \"_id\", headerName: \"Mongo Id\", width: 130 },\n  { field: \"status\", headerName: \"Status\", width: 130 },\n  { field: \"new_pastes\", headerName: \"New Pastes\", width: 130 },\n  { field: \"date\", headerName: \"Date\", width: 180 },\n\n];\n\nconst Logs = () => {\n  const [logs, setLogs] = useState([]);\n \n\n  const fetchLogs = async () => {\n    try {\n      const { data } = await api.getPastes(`http://localhost:5000/api/v1/logs`);\n      \n      const maped = data.map((log, i) => {\n          return {\n              id: i + 1,\n              _id: log._id,\n              status: log.status,\n              new_pastes: log.new_pastes,\n              date: log.date\n          }\n      })\n      const sorted = maped.sort((a,b) => {\n        // Turn your strings into dates, and then subtract them\n        // to get a value that is either negative, positive, or zero.\n        return new Date(b.date) - new Date(a.date);\n      });\n      setLogs(sorted);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchLogs();\n  }, []);\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n    <DataGrid  id={Math.random()} rows={logs} columns={columns} pageSize={5} checkboxSelection />\n  </div>\n  );\n};\n\nexport default Logs;\n","/app/client/src/components/Pastes.js",["62","63","64","65","66","67","68","69"],"import React, { useEffect, useState } from \"react\";\nimport api from \"../api/index\";\nimport List from \"@material-ui/core/List\";\nimport \"./Pastes.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport Tags from './Tags'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    overflow: \"auto\",\n  },\n}));\n\n\nexport default function Pastes({ paste }) {\n  const [expanded, setExpanded] = useState(false); //set the state of the accordion\n  const classes = useStyles();\n  const [pastes, setPastes] = useState([]);\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div>\n      <div className=\"ticket\">\n        <div className=\"section_1\">\n          <Accordion\n            expanded={expanded === paste._id}\n            onChange={handleChange(paste._id)}\n          >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1bh-content\"\n              id=\"panel1bh-header\"\n            >\n              <Grid container alignItems=\"center\">\n                <Grid item>\n                  <Typography gutterBottom variant=\"h6\">\n                    {paste.Title}\n                  </Typography>\n                </Grid>\n                {/* <Grid item xs>\n                      {ticket.updated === true && <CheckCircleOutlineIcon />}\n                    </Grid> */}\n              </Grid>\n            </AccordionSummary>\n            <AccordionDetails>\n              <List className={classes.root}>\n                <Typography color=\"textSecondary\" variant=\"body2\">\n                  {paste.Content}\n                </Typography>\n              </List>\n            </AccordionDetails>\n          </Accordion>\n        </div>\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            \n            <Typography gutterBottom>\n              \n              {`by ${paste.Author} | ${paste.Date}`}\n            </Typography>\n          </Grid>\n          <Grid item>\n            {/* <Typography gutterBottom variant=\"h6\">\n                  <IconButton\n                    classes={{ root: \"hideTicketButton\" }}\n                    onClick={() => hideTicket(ticket)}\n                    title=\"hide\"\n                  >\n                    <VisibilityOffIcon />\n                  </IconButton>\n                </Typography> */}\n          </Grid>\n        </Grid>\n        <div className=\"status\">\n              <Grid container alignItems=\"center\">\n               { paste.Lables !== undefined && \n                <Grid item>\n                  {paste.Lables.length !== 0 && (\n                    <Tags className=\"labels\" tags={paste.Lables} />\n                  )}\n                </Grid>\n               }\n              </Grid>\n            </div> \n      </div>\n    </div>\n  );\n}\n","/app/client/src/components/Tags.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":104,"column":10,"nodeType":"76","messageId":"77","endLine":104,"endColumn":15},{"ruleId":"78","severity":1,"message":"79","line":141,"column":6,"nodeType":"80","endLine":141,"endColumn":8,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":75,"column":24,"nodeType":"76","endLine":75,"endColumn":35},{"ruleId":"74","severity":1,"message":"83","line":109,"column":11,"nodeType":"76","messageId":"77","endLine":109,"endColumn":22},{"ruleId":"78","severity":1,"message":"84","line":131,"column":6,"nodeType":"80","endLine":131,"endColumn":15,"suggestions":"85"},{"ruleId":"74","severity":1,"message":"86","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"87","line":36,"column":6,"nodeType":"80","endLine":36,"endColumn":14,"suggestions":"88"},{"ruleId":"74","severity":1,"message":"86","line":1,"column":28,"nodeType":"76","messageId":"77","endLine":1,"endColumn":36},{"ruleId":"74","severity":1,"message":"89","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":14},{"ruleId":"74","severity":1,"message":"90","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":11},{"ruleId":"74","severity":1,"message":"91","line":27,"column":9,"nodeType":"76","messageId":"77","endLine":27,"endColumn":20},{"ruleId":"74","severity":1,"message":"92","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":14},{"ruleId":"74","severity":1,"message":"93","line":4,"column":16,"nodeType":"76","messageId":"77","endLine":4,"endColumn":24},{"ruleId":"74","severity":1,"message":"94","line":4,"column":26,"nodeType":"76","messageId":"77","endLine":4,"endColumn":38},{"ruleId":"74","severity":1,"message":"95","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"90","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":11},{"ruleId":"74","severity":1,"message":"89","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":14},{"ruleId":"74","severity":1,"message":"96","line":9,"column":8,"nodeType":"76","messageId":"77","endLine":9,"endColumn":30},{"ruleId":"74","severity":1,"message":"97","line":14,"column":8,"nodeType":"76","messageId":"77","endLine":14,"endColumn":18},{"ruleId":"74","severity":1,"message":"98","line":15,"column":8,"nodeType":"76","messageId":"77","endLine":15,"endColumn":25},{"ruleId":"74","severity":1,"message":"99","line":31,"column":10,"nodeType":"76","messageId":"77","endLine":31,"endColumn":16},{"ruleId":"74","severity":1,"message":"100","line":31,"column":18,"nodeType":"76","messageId":"77","endLine":31,"endColumn":27},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getKeyWord'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","'allFiltered' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAll'. Either include it or remove the dependency array.",["104"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'setPastes'. Either include it or remove the dependency array. If 'setPastes' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["105"],"'Button' is defined but never used.","'api' is defined but never used.","'handleClick' is assigned a value but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'useEffect' is defined but never used.","'CheckCircleOutlineIcon' is defined but never used.","'IconButton' is defined but never used.","'VisibilityOffIcon' is defined but never used.","'pastes' is assigned a value but never used.","'setPastes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [getKeyWord]",{"range":"112","text":"113"},"Update the dependencies array to be: [fetchAll, options]",{"range":"114","text":"115"},"Update the dependencies array to be: [lables, setPastes]",{"range":"116","text":"117"},[3878,3880],"[getKeyWord]",[3620,3629],"[fetchAll, options]",[1033,1041],"[lables, setPastes]"]