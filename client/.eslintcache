[{"/app/client/src/reportWebVitals.js":"1","/app/client/src/App.js":"2","/app/client/src/components/Pastes.js":"3","/app/client/src/index.js":"4","/app/client/src/api/index.js":"5","/app/client/src/components/Search.js":"6","/app/client/src/components/Lables.js":"7"},{"size":362,"mtime":1606673647310,"results":"8","hashOfConfig":"9"},{"size":2843,"mtime":1606836815787,"results":"10","hashOfConfig":"9"},{"size":4739,"mtime":1606827044963,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1606673647310,"results":"12","hashOfConfig":"9"},{"size":267,"mtime":1606690048998,"results":"13","hashOfConfig":"9"},{"size":3964,"mtime":1606826954342,"results":"14","hashOfConfig":"9"},{"size":1031,"mtime":1606824608740,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jg9a1a",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/app/client/src/reportWebVitals.js",[],"/app/client/src/App.js",["32","33","34"],"import { useState, useEffect } from \"react\";\nimport Pastes from \"./components/Pastes\";\nimport api from \"./api/index\";\nimport Search from \"./components/Search\";\nfunction App() {\n  const [pastes, setPastes] = useState([]);\n  const [searchText, setSearchText] = useState([]); // search input text\n  const [faildLogs, setFailedLogs] = useState([]);\n  const [faildLogsLength, setFailedLogsLength] = useState([]);\n\n  const fetchPastes = async () => {\n    try {\n      const { data } = await api.getPastes(\"/pastes\");\n      console.log(data);\n      setPastes(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const fetchLogs = async (status) => {\n    try {\n      const { data } = await api.getPastes(`/logs/${status}`);\n      console.log(data);\n      setFailedLogs(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const searchTicket = async () => {\n    try {\n      const { data } = await api.getPastes(\n        `/pastes/search?search=${searchText}`\n      );\n      console.log(data);\n      setPastes(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    try {\n      const interval = setInterval(async () => {\n        fetchLogs(\"faild\");\n      }, 300000);\n      return () => {\n        clearInterval(interval)\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  });\n\n  useEffect(() => {\n    // search for ticket in the list\n    searchTicket();\n  }, [searchText]);\n\n  useEffect(() => {\n    fetchPastes();\n  }, []);\n  return (\n    <div className=\"App\">\n      <Search faildLogs={faildLogs} setSearchText={setSearchText} searchText={searchText} />\n      <div className=\"mainArea\" style={{ maxWidth: \"100%\", display: \"flex\" }}>\n        <div\n          className=\"allPastes\"\n          style={{\n            overflowY: \"auto\",\n            height: \"700px\",\n            width: \"600px\",\n            marginTop: \"5rem\",\n          }}\n        >\n          {pastes.length !== 0 &&\n            pastes.map((paste, i) => {\n              return <Pastes key={i} paste={paste} />;\n            })}\n        </div>\n        <div\n          className=\"customPastes\"\n          style={{\n            marginTop: \"5rem\",\n            display: \"grid\",\n            gridAutoRows: \"50% 50%\",\n          }}\n        >\n          <div className=\"first\" style={{ overflowY: \"auto\", height: \"300px\" }}>\n            {pastes.length !== 0 &&\n              pastes.map((paste, i) => {\n                return <Pastes key={i} paste={paste} />;\n              })}\n          </div>\n          <div\n            className=\"second\"\n            style={{ overflowY: \"auto\", height: \"300px\" }}\n          >\n            {pastes.length !== 0 &&\n              pastes.map((paste, i) => {\n                return <Pastes key={i} paste={paste} />;\n              })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/app/client/src/components/Pastes.js",["35","36","37","38","39","40","41","42"],"/app/client/src/index.js",[],"/app/client/src/api/index.js",[],"/app/client/src/components/Search.js",["43","44","45","46","47","48"],"/app/client/src/components/Lables.js",["49","50"],"import React, { useEffect } from 'react';\nimport Selector from 'react-select';\n// import network from '../../services/network';\n\nconst ChooseLabels = ({\n//   labels,\n}) => {\n//   useEffect(\n//     // gets existing labels\n//     () => {\n \n//     }, [],\n//   );\n\nconst lables = [\"Money\", \"porn\"]\n\n//   const selectionChange = (choosens) => {\n//     setLabels(choosens);\n//   };\n\n  const customStyles = {\n    option: (provided) => ({\n      ...provided,\n      borderBottom: '1px dotted black',\n      height: '100%',\n    }),\n    control: (provided) => ({\n      ...provided,\n      backgroundColor: 'neutral30',\n    }),\n  };\n  return (\n    <div className=\"labelFilter\">\n      <Selector\n        value={lables}\n        className=\"selectLabels\"\n        maxMenuHeight={300}\n        placeholder=\"select labels\"\n        isMulti\n        name=\"labels\"\n        // onChange={selectionChange}\n        closeMenuOnSelect={false}\n        // options={chooseLabels}\n        styles={customStyles}\n      />\n    </div>\n  );\n};\n\nexport default ChooseLabels;\n",{"ruleId":"51","severity":1,"message":"52","line":9,"column":10,"nodeType":"53","messageId":"54","endLine":9,"endColumn":25},{"ruleId":"51","severity":1,"message":"55","line":9,"column":27,"nodeType":"53","messageId":"54","endLine":9,"endColumn":46},{"ruleId":"56","severity":1,"message":"57","line":59,"column":6,"nodeType":"58","endLine":59,"endColumn":18,"suggestions":"59"},{"ruleId":"51","severity":1,"message":"60","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":26},{"ruleId":"51","severity":1,"message":"61","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":11},{"ruleId":"51","severity":1,"message":"62","line":6,"column":8,"nodeType":"53","messageId":"54","endLine":6,"endColumn":14},{"ruleId":"51","severity":1,"message":"63","line":9,"column":8,"nodeType":"53","messageId":"54","endLine":9,"endColumn":30},{"ruleId":"51","severity":1,"message":"64","line":14,"column":8,"nodeType":"53","messageId":"54","endLine":14,"endColumn":18},{"ruleId":"51","severity":1,"message":"65","line":15,"column":8,"nodeType":"53","messageId":"54","endLine":15,"endColumn":25},{"ruleId":"51","severity":1,"message":"66","line":29,"column":10,"nodeType":"53","messageId":"54","endLine":29,"endColumn":16},{"ruleId":"51","severity":1,"message":"67","line":29,"column":18,"nodeType":"53","messageId":"54","endLine":29,"endColumn":27},{"ruleId":"51","severity":1,"message":"68","line":10,"column":8,"nodeType":"53","messageId":"54","endLine":10,"endColumn":22},{"ruleId":"51","severity":1,"message":"69","line":11,"column":8,"nodeType":"53","messageId":"54","endLine":11,"endColumn":26},{"ruleId":"51","severity":1,"message":"70","line":12,"column":8,"nodeType":"53","messageId":"54","endLine":12,"endColumn":21},{"ruleId":"51","severity":1,"message":"65","line":13,"column":8,"nodeType":"53","messageId":"54","endLine":13,"endColumn":25},{"ruleId":"51","severity":1,"message":"71","line":14,"column":8,"nodeType":"53","messageId":"54","endLine":14,"endColumn":20},{"ruleId":"51","severity":1,"message":"61","line":17,"column":8,"nodeType":"53","messageId":"54","endLine":17,"endColumn":11},{"ruleId":"51","severity":1,"message":"60","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"73","line":5,"column":23,"nodeType":"74","messageId":"75","endLine":7,"endColumn":2},"no-unused-vars","'faildLogsLength' is assigned a value but never used.","Identifier","unusedVar","'setFailedLogsLength' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchTicket'. Either include it or remove the dependency array.","ArrayExpression",["76"],"'useEffect' is defined but never used.","'api' is defined but never used.","'Button' is defined but never used.","'CheckCircleOutlineIcon' is defined but never used.","'IconButton' is defined but never used.","'VisibilityOffIcon' is defined but never used.","'pastes' is assigned a value but never used.","'setPastes' is assigned a value but never used.","'VisibilityIcon' is defined but never used.","'EventAvailableIcon' is defined but never used.","'EventBusyIcon' is defined but never used.","'ScheduleIcon' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",{"desc":"77","fix":"78"},"Update the dependencies array to be: [searchText, searchTicket]",{"range":"79","text":"80"},[1414,1426],"[searchText, searchTicket]"]