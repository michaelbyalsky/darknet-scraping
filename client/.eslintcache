[{"/app/client/src/reportWebVitals.js":"1","/app/client/src/App.js":"2","/app/client/src/components/Pastes.js":"3","/app/client/src/index.js":"4","/app/client/src/api/index.js":"5","/app/client/src/components/Search.js":"6"},{"size":362,"mtime":1606673647310,"results":"7","hashOfConfig":"8"},{"size":1247,"mtime":1606697967525,"results":"9","hashOfConfig":"8"},{"size":4763,"mtime":1606696055498,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1606673647310,"results":"11","hashOfConfig":"8"},{"size":267,"mtime":1606690048998,"results":"12","hashOfConfig":"8"},{"size":5251,"mtime":1606697898656,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jg9a1a",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/app/client/src/reportWebVitals.js",[],"/app/client/src/App.js",["29"],"import { useState, useEffect } from \"react\"\nimport Pastes from \"./components/Pastes\";\nimport api from \"./api/index\";\nimport Search from \"./components/Search\";\nfunction App() {\n  const [pastes, setPastes] = useState([]);\n  const [searchText, setSearchText] = useState([]); // search input text\n\n  const fetchPastes = async () => {\n    try {\n      const { data } = await api.getPastes(\"/pastes\");\n      console.log(data);\n      setPastes(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const searchTicket = async () => {\n    try {\n      const { data } = await api.getPastes(`/pastes/search?search=${searchText}`);\n      console.log(data);\n      setPastes(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    // search for ticket in the list\n  \n    searchTicket();\n  }, [searchText]);\n\n  useEffect(() => {\n    fetchPastes();\n  }, []);\n  return (\n    <div className=\"App\">\n      <Search\n          setSearchText={setSearchText}\n          searchText={searchText}\n        />\n        <div style={{marginTop: \"5rem\"}}>\n      {pastes.length !== 0 &&\n        pastes.map((paste, i) => {\n          return <Pastes key={i} paste={paste} />;\n        })}\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","/app/client/src/components/Pastes.js",["30","31","32","33","34","35","36","37"],"import React, { useEffect, useState } from \"react\";\nimport api from \"../api/index\";\nimport List from \"@material-ui/core/List\";\nimport \"./Pastes.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    overflow: \"auto\",\n  },\n}));\n\nexport default function Pastes({ paste }) {\n    console.log(paste);\n  const [expanded, setExpanded] = useState(false); //set the state of the accordion\n  const classes = useStyles();\n  const [pastes, setPastes] = useState([]);\n//   const fetchPastes = async () => {\n//     try {\n//       const { data } = await api.getPastes(\"/pastes\");\n//       console.log(data);\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n//   useEffect(() => {\n//     fetchPastes();\n//   }, []);\n\n  return (\n    <div>\n      <div className=\"ticket\">\n        <div className=\"section_1\">\n          <Accordion\n            expanded={expanded === paste._id}\n            onChange={handleChange(paste._id)}\n          >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1bh-content\"\n              id=\"panel1bh-header\"\n            >\n              <Grid container alignItems=\"center\">\n                <Grid item>\n                  <Typography gutterBottom variant=\"h6\">\n                    {paste.Title}\n                  </Typography>\n                </Grid>\n                {/* <Grid item xs>\n                      {ticket.updated === true && <CheckCircleOutlineIcon />}\n                    </Grid> */}\n              </Grid>\n            </AccordionSummary>\n            <AccordionDetails>\n              <List className={classes.root}>\n                <Typography color=\"textSecondary\" variant=\"body2\">\n                  {paste.Content}\n                </Typography>\n              </List>\n            </AccordionDetails>\n          </Accordion>\n        </div>\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            <Typography gutterBottom>\n              {`by ${paste.Author} | ${paste.Date.split(\"T\")[0]} ${\n                paste.Date.split(\"T\")[1].split(\"+\")[0]\n              }`}\n            </Typography>\n          </Grid>\n          <Grid item>\n            {/* <Typography gutterBottom variant=\"h6\">\n                  <IconButton\n                    classes={{ root: \"hideTicketButton\" }}\n                    onClick={() => hideTicket(ticket)}\n                    title=\"hide\"\n                  >\n                    <VisibilityOffIcon />\n                  </IconButton>\n                </Typography> */}\n          </Grid>\n        </Grid>\n        {/* <div className=\"status\">\n              <Grid container alignItems=\"center\">\n                {ticket.updated !== true && (\n                  <Grid item xs>\n                    <Button\n                      onClick={() => doneTicket(ticket)}\n                      classes={{ root: \"doneButton\" }}\n                      id={`doneButton_${i}`}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"small\"\n                    >\n                      Done\n                    </Button>\n                  </Grid>\n                )}\n                {ticket.updated === true && (\n                  <Grid item xs>\n                    <Button\n                      onClick={() => restoreTicket(ticket)}\n                      classes={{ root: \"doneButton\" }}\n                      id={`doneButton_${i}`}\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      size=\"small\"\n                    >\n                      Undone\n                    </Button>\n                  </Grid>\n                )}\n                <Grid item>\n                  {ticket.labels && (\n                    <Labels className=\"labels\" labels={ticket.labels} />\n                  )}\n                </Grid>\n              </Grid>\n            </div> */}\n      </div>\n    </div>\n  );\n}\n","/app/client/src/index.js",[],"/app/client/src/api/index.js",[],"/app/client/src/components/Search.js",["38","39","40","41","42","43","44"],"import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport SearchIcon from '@material-ui/icons/Search';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport EventBusyIcon from '@material-ui/icons/EventBusy';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  appBar: {\n    position: 'fixed',\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  toolbar: {\n    minHeight: 0,\n    alignItems: 'flex-start',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n  },\n  buttons2: {\n    flexGrow: 1,\n  },\n  buttons1: {\n    display: 'flex',\n    justifyItems: 'space-between',\n    flexGrow: 1,\n    alignSelf: 'flex-end',\n  },\n  button: {\n    margin: '2px',\n  },\n}));\n\nconst Search = ({\n  searchText,\n  setSearchText,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.grow}>\n      <AppBar size=\"small\" className={classes.appBar} id=\"wrapper\">\n        <Toolbar className={classes.toolbar}>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            DarkNet\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              size=\"small\"\n              id=\"searchInput\"\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              value={searchText}\n              onChange={(e) => setSearchText(e.target.value)}\n            />\n          </div>\n          <div />\n          {/* <div id=\"buttons\" className={classes.buttons1} />\n          <div id=\"buttons\" className={classes.buttons2}>\n            <IconButton\n              id=\"restoreHideTickets\"\n              title=\"show all\"\n              onClick={showAllTickets}\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              <Badge color=\"secondary\">\n                <VisibilityIcon color=\"action\" />\n              </Badge>\n            </IconButton>\n            <IconButton\n              id=\"hideTicketsCounter\"\n              title=\"hidden tickets\"\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              <Badge badgeContent={hiddenTickets} color=\"secondary\">\n                <VisibilityOffIcon color=\"action\" />\n              </Badge>\n            </IconButton>\n            <IconButton\n              title=\"sort by date\"\n              id=\"sortByDate\"\n              onClick={sortByDate}\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              <Badge color=\"secondary\">\n                <ScheduleIcon color=\"action\" />\n              </Badge>\n            </IconButton>\n            <IconButton\n              id=\"sortByUnDone\"\n              title=\"sort by undone\"\n              onClick={sortByUnDone}\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              <Badge badgeContent={ticketsLeftNumber} color=\"secondary\">\n                <EventBusyIcon color=\"action\" />\n              </Badge>\n            </IconButton>\n            <IconButton\n              id=\"sortByDone\"\n              title=\"sort by done\"\n              onClick={sortByDone}\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              <Badge badgeContent={doneTicketsNumber} color=\"secondary\">\n                <EventAvailableIcon color=\"action\" />\n              </Badge>\n            </IconButton>\n          </div> */}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Search;\n",{"ruleId":"45","severity":1,"message":"46","line":33,"column":6,"nodeType":"47","endLine":33,"endColumn":18,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":26},{"ruleId":"49","severity":1,"message":"53","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":11},{"ruleId":"49","severity":1,"message":"54","line":6,"column":8,"nodeType":"51","messageId":"52","endLine":6,"endColumn":14},{"ruleId":"49","severity":1,"message":"55","line":9,"column":8,"nodeType":"51","messageId":"52","endLine":9,"endColumn":30},{"ruleId":"49","severity":1,"message":"56","line":14,"column":8,"nodeType":"51","messageId":"52","endLine":14,"endColumn":18},{"ruleId":"49","severity":1,"message":"57","line":15,"column":8,"nodeType":"51","messageId":"52","endLine":15,"endColumn":25},{"ruleId":"49","severity":1,"message":"58","line":30,"column":10,"nodeType":"51","messageId":"52","endLine":30,"endColumn":16},{"ruleId":"49","severity":1,"message":"59","line":30,"column":18,"nodeType":"51","messageId":"52","endLine":30,"endColumn":27},{"ruleId":"49","severity":1,"message":"56","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":18},{"ruleId":"49","severity":1,"message":"60","line":8,"column":8,"nodeType":"51","messageId":"52","endLine":8,"endColumn":13},{"ruleId":"49","severity":1,"message":"61","line":10,"column":8,"nodeType":"51","messageId":"52","endLine":10,"endColumn":22},{"ruleId":"49","severity":1,"message":"62","line":11,"column":8,"nodeType":"51","messageId":"52","endLine":11,"endColumn":26},{"ruleId":"49","severity":1,"message":"63","line":12,"column":8,"nodeType":"51","messageId":"52","endLine":12,"endColumn":21},{"ruleId":"49","severity":1,"message":"57","line":13,"column":8,"nodeType":"51","messageId":"52","endLine":13,"endColumn":25},{"ruleId":"49","severity":1,"message":"64","line":14,"column":8,"nodeType":"51","messageId":"52","endLine":14,"endColumn":20},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchTicket'. Either include it or remove the dependency array.","ArrayExpression",["65"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'api' is defined but never used.","'Button' is defined but never used.","'CheckCircleOutlineIcon' is defined but never used.","'IconButton' is defined but never used.","'VisibilityOffIcon' is defined but never used.","'pastes' is assigned a value but never used.","'setPastes' is assigned a value but never used.","'Badge' is defined but never used.","'VisibilityIcon' is defined but never used.","'EventAvailableIcon' is defined but never used.","'EventBusyIcon' is defined but never used.","'ScheduleIcon' is defined but never used.",{"desc":"66","fix":"67"},"Update the dependencies array to be: [searchText, searchTicket]",{"range":"68","text":"69"},[822,834],"[searchText, searchTicket]"]